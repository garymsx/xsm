/**
 * 汎用割り算処理、hl /= a を実行
 * @param  hl  割られる数
 * @param  bc  割る数
 * @return hl  計算結果
 */
function DIVW(hl,bc) return hl {
    using(bc) {
        hl = div16(hl, bc);
        return hl;
    }
}

/**
 * 汎用剰余算処理、hl %= a を実行
 * @param  hl  割られる数
 * @param  a   割る数
 * @return hl  余り
 */
function MODW(hl,bc) return hl {
    using(bc) {
        div16(hl, bc);
        return hl;
    }
}
/**
 * 汎用割り算処理、hl /= bc を実行
 * @param  hl  割られる数
 * @param  bc  割る数
 * @return bc  計算結果 (hl 余り)
 */
function div16(hl,bc) return bc {

    // 0で除算
    if(b == 0 && c == 0) return 0;

    using(af,de) {
        // BCを左詰めする、フラグが押し出されるまでループ
        a = 0;
        de = bc;
        @ {
            a++;
            de<<<;
            on $nc continue; // 押し出し判定
        }
        de>>>;                // 押し出され分を戻す
        bc = 0;
        while() {
            if(hl >= de) { // 元の数のほうが大きければbcを引く
                hl -= de;
                bc++;
            }
            a--;
            on $z break;     // ループ回数処理したらここで打ち切り
            // ループ時の処理
            de>>; // 割る数の桁下がり
            bc<<; // 商の桁上がり
        }

        return bc;
    }
}

