/**
 * 汎用割り算処理、HL /= A を実行
 * @param  HL  割られる数
 * @param  A   割る数
 * @return HL  計算結果
 */
function DIV(HL,A) return HL {
    using(BC) {
        HL = div(HL, A);
    }
    return HL;
}

/**
 * 汎用剰余算処理、HL %= A を実行
 * @param  HL  割られる数
 * @param  A   割る数
 * @return HL  余り
 */
function MOD(HL,A) return HL {
    using(BC) {
        div(HL, A);
    }
    return HL;
}

/**
 * 汎用割り算処理、HL /= A を実行
 * @param  HL  割られる数
 * @param  A   割る数
 * @return BC  計算結果 (HL 余り)
 */
function div(HL,A) return BC {
    // 0で除算
    if(A == 0) return 0;

    using(AF,DE) {
        // Aを左詰めする、フラグが押し出されるまでループ
        B = 8;
        @ {                  // @{〜} 簡易ラベル、continueとbreakが使えるようになる
            B++;
            A<<<;
            on $NC continue; // 押し出し判定
        }
        A>>>;                // 押し出され分を戻す
        D = A;               // 左詰めしたAを16bitに拡張
        E = 0;

        A = B;
        BC = 0;
        while() {
            if(HL >= DE) { // 元の数のほうが大きければDEを引く
                HL -= DE;
                BC++;
            }
            A--;
            on $Z break;     // ループ回数処理したらここで打ち切り
            // ループ時の処理
            DE>>; // 割る数の桁下がり
            BC<<; // 商の桁上がり
        }

        return BC;
    }

}
